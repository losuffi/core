In file included from test_mpl_smart_ptr.cpp:16:0:
../ccdk/mpl/function/function.h: In constructor ‘ccdk::mpl::fn::function<Ret(Args ...)>::function(Fn&&, ccdk::mpl::false_, ccdk::mpl::false_, ccdk::mpl::true_)’:
../ccdk/mpl/function/function.h:75:52: error: ‘mfn_class_t’ was not declared in this scope
    :fn{ new(ptr::nothrow) member_function_invoker< mfn_class_t<Fn>,Fn,Ret,Args...>{ fn } }
                                                    ^~~~~~~~~~~
../ccdk/mpl/function/function.h:75:66: error: wrong number of template arguments (1, should be at least 3)
    :fn{ new(ptr::nothrow) member_function_invoker< mfn_class_t<Fn>,Fn,Ret,Args...>{ fn } }
                                                                  ^
In file included from ../ccdk/mpl/function/function.h:16:0,
                 from test_mpl_smart_ptr.cpp:16:
../ccdk/mpl/function/invoke_interface.h:92:9: note: provided for ‘template<class T, class P, class Ret, class ... Args> struct ccdk::mpl::fn::member_function_invoker’
  struct member_function_invoker
         ^~~~~~~~~~~~~~~~~~~~~~~
In file included from test_mpl_smart_ptr.cpp:16:0:
../ccdk/mpl/function/function.h:75:70: error: expected primary-expression before ‘,’ token
    :fn{ new(ptr::nothrow) member_function_invoker< mfn_class_t<Fn>,Fn,Ret,Args...>{ fn } }
                                                                      ^
../ccdk/mpl/function/function.h:75:74: error: expected primary-expression before ‘,’ token
    :fn{ new(ptr::nothrow) member_function_invoker< mfn_class_t<Fn>,Fn,Ret,Args...>{ fn } }
                                                                          ^
../ccdk/mpl/function/function.h:75:79: error: expected primary-expression before ‘...’ token
    :fn{ new(ptr::nothrow) member_function_invoker< mfn_class_t<Fn>,Fn,Ret,Args...>{ fn } }
                                                                               ^~~
../ccdk/mpl/function/function.h:75:82: error: expected ‘}’ before ‘>’ token
    :fn{ new(ptr::nothrow) member_function_invoker< mfn_class_t<Fn>,Fn,Ret,Args...>{ fn } }
                                                                                  ^
../ccdk/mpl/function/function.h:75:82: error: expected ‘{’ before ‘>’ token
In file included from ../ccdk/mpl/function/bind_mfn.h:8:0,
                 from test_mpl_smart_ptr.cpp:17:
../ccdk/mpl/type_traits/args_of.h: At global scope:
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:23:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:23:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:22:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:22:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:21:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:21:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:20:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:20:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:19:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:19:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:18:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:18:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:17:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:17:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:16:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:16:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:15:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:15:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:14:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, ...)  call ( CCDK_PP_AT(seq, 2), 3, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:15:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE3’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:14:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, ...)  call ( CCDK_PP_AT(seq, 2), 3, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:15:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE3’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:13:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, ...)  call ( CCDK_PP_AT(seq, 1), 2, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE1(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:14:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE2’
 #define CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, ...)  call ( CCDK_PP_AT(seq, 2), 3, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:15:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE3’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:13:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, ...)  call ( CCDK_PP_AT(seq, 1), 2, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE1(seq, call, __VA_ARGS__)
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:14:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE2’
 #define CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, ...)  call ( CCDK_PP_AT(seq, 2), 3, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:15:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE3’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:32:85: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args...) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };                                                            \
                                                                                     ^
../ccdk/preprocessor/seq_foreach_item.h:12:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE1(seq, call, ...)  call ( CCDK_PP_AT(seq, 0), 1, __VA_ARGS__ )
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:13:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE1’
 #define CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, ...)  call ( CCDK_PP_AT(seq, 1), 2, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE1(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:14:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE2’
 #define CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, ...)  call ( CCDK_PP_AT(seq, 2), 3, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:15:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE3’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:33:88: error: template argument 1 is invalid
    template<typename Ret, typename... Args> struct args_of_impl< Ret(Args......) Prefix> { typedef arg_pack<Args...> type; typedef void clazz; };
                                                                                        ^
../ccdk/preprocessor/seq_foreach_item.h:12:54: note: in expansion of macro ‘FUNCTION_ENUM’
 #define CCDK_PP_FOREACH_ITEM_VALUE1(seq, call, ...)  call ( CCDK_PP_AT(seq, 0), 1, __VA_ARGS__ )
                                                      ^~~~
../ccdk/preprocessor/seq_foreach_item.h:13:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE1’
 #define CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, ...)  call ( CCDK_PP_AT(seq, 1), 2, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE1(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:14:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE2’
 #define CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, ...)  call ( CCDK_PP_AT(seq, 2), 3, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE2(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:15:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE3’
 #define CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, ...)  call ( CCDK_PP_AT(seq, 3), 4, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE3(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:16:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE4’
 #define CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, ...)  call ( CCDK_PP_AT(seq, 4), 5, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE4(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:17:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE5’
 #define CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, ...)  call ( CCDK_PP_AT(seq, 5), 6, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE5(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:18:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE6’
 #define CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, ...)  call ( CCDK_PP_AT(seq, 6), 7, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE6(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:19:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE7’
 #define CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, ...)  call ( CCDK_PP_AT(seq, 7), 8, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE7(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:20:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE8’
 #define CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, ...)  call ( CCDK_PP_AT(seq, 8), 9, __VA_ARGS__ )  CCDK_PP_FOREACH_ITEM_VALUE8(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:21:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE9’
 #define CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, ...) call ( CCDK_PP_AT(seq, 9), 10, __VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE9(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:22:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE10’
 #define CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, ...) call ( CCDK_PP_AT(seq, 10), 11,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE10(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:23:99: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE11’
 #define CCDK_PP_FOREACH_ITEM_VALUE12(seq, call, ...) call ( CCDK_PP_AT(seq, 11), 12,__VA_ARGS__ ) CCDK_PP_FOREACH_ITEM_VALUE11(seq, call, __VA_ARGS__)
                                                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:10:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_VALUE12’
 #define CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_VALUE##size (seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:9:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP3’
 #define CCDK_PP_FOREACH_ITEM_STEP2(seq, call, size, ...) CCDK_PP_FOREACH_ITEM_STEP3(seq, call, size, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:8:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP2’
 #define CCDK_PP_FOREACH_ITEM_STEP1(seq, call, ...)       CCDK_PP_FOREACH_ITEM_STEP2(seq, call, CCDK_PP_SIZE(seq), __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/preprocessor/seq_foreach_item.h:7:58: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM_STEP1’
 #define CCDK_PP_FOREACH_ITEM(call, seq, ...)             CCDK_PP_FOREACH_ITEM_STEP1(seq, call, __VA_ARGS__)
                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/type_traits/args_of.h:35:4: note: in expansion of macro ‘CCDK_PP_FOREACH_ITEM’
    CCDK_PP_FOREACH_ITEM(FUNCTION_ENUM, CCDK_PP_COMPOSE_EX((const, volatile, const volatile), (&, &&, ), , &, &&))
    ^~~~~~~~~~~~~~~~~~~~
In file included from test_mpl_smart_ptr.cpp:23:0:
../ccdk/mpl/smart_ptr/scope_ptr.h: In destructor ‘ccdk::mpl::sp::scope_ptr<void>::~scope_ptr()’:
../ccdk/mpl/smart_ptr/scope_ptr.h:153:11: warning: deleting ‘ccdk::mpl::sp::scope_ptr<void>::value_type {aka void*}’ is undefined [-Wdelete-incomplete]
    delete ptr;
           ^~~
test_mpl_smart_ptr.cpp: In function ‘int main()’:
test_mpl_smart_ptr.cpp:76:19: error: cast from ‘int*’ to ‘int’ loses precision [-fpermissive]
   DebugValue((int)p);
                   ^
test_mpl_smart_ptr.cpp:77:23: error: cast from ‘int*’ to ‘int’ loses precision [-fpermissive]
   DebugValue((int)&a[0]);
                       ^
test_mpl_smart_ptr.cpp:78:23: error: cast from ‘int*’ to ‘int’ loses precision [-fpermissive]
   DebugValue((int)&a[1]);
                       ^
test_mpl_smart_ptr.cpp:89:19: error: cast from ‘int*’ to ‘int’ loses precision [-fpermissive]
   DebugValue((int)p);
                   ^
test_mpl_smart_ptr.cpp:90:23: error: cast from ‘int*’ to ‘int’ loses precision [-fpermissive]
   DebugValue((int)&a[0]);
                       ^
test_mpl_smart_ptr.cpp:91:23: error: cast from ‘int*’ to ‘int’ loses precision [-fpermissive]
   DebugValue((int)&a[1]);
                       ^
