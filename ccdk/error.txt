test_mpl_container.cpp: In function ‘int main()’:
test_mpl_container.cpp:92:24: error: ambiguous overload for ‘operator+’ (operand types are ‘ccdk::mpl::tuple<char>’ and ‘ccdk::mpl::tuple<float>’)
  auto tuple10 = tuple8 + tuple9;
                 ~~~~~~~^~~~~~~~
In file included from ../ccdk/mpl/type_traits.h:37:0,
                 from test_mpl_container.cpp:9:
../ccdk/mpl/container/tuple.h:257:19: note: candidate: constexpr auto ccdk::mpl::tuple<Args>::operator+(ccdk::mpl::tuple<Args2 ...>&) [with Args2 = {float}; Args = {char}]
    constexpr auto operator+(tuple<Args2...>& t2)
                   ^~~~~~~~
../ccdk/mpl/container/tuple.h:327:18: note: candidate: constexpr auto ccdk::mpl::operator+(ccdk::mpl::tuple<Args ...>&, T) [with T = ccdk::mpl::tuple<float>; Args = {char}]
   constexpr auto operator+(tuple<Args...>& tp, T t )
                  ^~~~~~~~
../ccdk/mpl/container/tuple.h:337:18: note: candidate: constexpr auto ccdk::mpl::operator+(T, ccdk::mpl::tuple<Args ...>&) [with T = ccdk::mpl::tuple<char>; Args = {float}]
   constexpr auto operator+(T t, tuple<Args...>& tp)
                  ^~~~~~~~
In file included from ../ccdk/mpl/type_traits.h:33:0,
                 from test_mpl_container.cpp:9:
../ccdk/mpl/debug_type.hpp:109:74: error: template argument 1 is invalid
 #define DebugTypeName(T) std::cout<<" *** typename: " << TypeNameHelper<T>{}()<< std::endl;
                                                                          ^
../ccdk/mpl/debug_type.hpp:110:31: note: in expansion of macro ‘DebugTypeName’
 #define DebugValueTypeName(V) DebugTypeName(decltype(V));
                               ^~~~~~~~~~~~~
test_mpl_container.cpp:97:2: note: in expansion of macro ‘DebugValueTypeName’
  DebugValueTypeName(tuple10);
  ^~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:109:74: error: template argument 1 is invalid
 #define DebugTypeName(T) std::cout<<" *** typename: " << TypeNameHelper<T>{}()<< std::endl;
                                                                          ^
../ccdk/mpl/debug_type.hpp:110:31: note: in expansion of macro ‘DebugTypeName’
 #define DebugValueTypeName(V) DebugTypeName(decltype(V));
                               ^~~~~~~~~~~~~
test_mpl_container.cpp:98:2: note: in expansion of macro ‘DebugValueTypeName’
  DebugValueTypeName(tuple11);
  ^~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:109:74: error: template argument 1 is invalid
 #define DebugTypeName(T) std::cout<<" *** typename: " << TypeNameHelper<T>{}()<< std::endl;
                                                                          ^
../ccdk/mpl/debug_type.hpp:110:31: note: in expansion of macro ‘DebugTypeName’
 #define DebugValueTypeName(V) DebugTypeName(decltype(V));
                               ^~~~~~~~~~~~~
test_mpl_container.cpp:99:2: note: in expansion of macro ‘DebugValueTypeName’
  DebugValueTypeName(tuple12);
  ^~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:111:93: error: template argument 1 is invalid
 #define DebugValueTypeAndValue(V) std::cout<<" *** typename: " << TypeNameHelper<decltype(V)>{}() << " -- value: "<< V << std::endl;
                                                                                             ^
test_mpl_container.cpp:100:2: note: in expansion of macro ‘DebugValueTypeAndValue’
  DebugValueTypeAndValue(tuple12[0_th]);
  ^~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:111:93: error: template argument 1 is invalid
 #define DebugValueTypeAndValue(V) std::cout<<" *** typename: " << TypeNameHelper<decltype(V)>{}() << " -- value: "<< V << std::endl;
                                                                                             ^
test_mpl_container.cpp:101:2: note: in expansion of macro ‘DebugValueTypeAndValue’
  DebugValueTypeAndValue(tuple12[1_th]);
  ^~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:111:93: error: template argument 1 is invalid
 #define DebugValueTypeAndValue(V) std::cout<<" *** typename: " << TypeNameHelper<decltype(V)>{}() << " -- value: "<< V << std::endl;
                                                                                             ^
test_mpl_container.cpp:102:2: note: in expansion of macro ‘DebugValueTypeAndValue’
  DebugValueTypeAndValue(tuple12[2_th]);
  ^~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:111:93: error: template argument 1 is invalid
 #define DebugValueTypeAndValue(V) std::cout<<" *** typename: " << TypeNameHelper<decltype(V)>{}() << " -- value: "<< V << std::endl;
                                                                                             ^
test_mpl_container.cpp:103:2: note: in expansion of macro ‘DebugValueTypeAndValue’
  DebugValueTypeAndValue(tuple12[3_th]);
  ^~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:111:93: error: template argument 1 is invalid
 #define DebugValueTypeAndValue(V) std::cout<<" *** typename: " << TypeNameHelper<decltype(V)>{}() << " -- value: "<< V << std::endl;
                                                                                             ^
test_mpl_container.cpp:110:2: note: in expansion of macro ‘DebugValueTypeAndValue’
  DebugValueTypeAndValue(tuple14[0_th]);
  ^~~~~~~~~~~~~~~~~~~~~~
../ccdk/mpl/debug_type.hpp:111:93: error: template argument 1 is invalid
 #define DebugValueTypeAndValue(V) std::cout<<" *** typename: " << TypeNameHelper<decltype(V)>{}() << " -- value: "<< V << std::endl;
                                                                                             ^
test_mpl_container.cpp:111:2: note: in expansion of macro ‘DebugValueTypeAndValue’
  DebugValueTypeAndValue(tuple14[1_th]);
  ^~~~~~~~~~~~~~~~~~~~~~
